@model RentACar.ViewModels.RentCarViewModel

@{
    ViewData["Title"] = "Rent";
}
<div class="rent-container">
    <h1>I want to rent </h1>

    <h4> @Html.DisplayFor(model => model.Car.Brand) @Html.DisplayFor(model => model.Car.Model)</h4>
    <h5> @(Html.DisplayNameFor(model => model.Car.PricePerDay)): $@(Html.DisplayFor(model => model.Car.PricePerDay)) </h5>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="RentCar">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Car.Id" />
                <div class="form-group">
                    <label asp-for="Days" class="control-label"></label>
                    <input asp-for="Days" id="days" class="form-control" min="1" />
                    <span asp-validation-for="Days" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Rent" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
    <div class="row total-price">
        <div>
            <span>Total price: $</span>
        </div>
        <div>
            <span id="totalPrice"></span>
        </div>
    </div>

    <div class="total-price" style="margin-top: 50px;">
        <a class="btn btn-primary" style="width: 100%; height: 100%" asp-action="Index">Let's see more cars</a>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.getElementById('days').onchange = handleChange;
        var totalPrice = document.getElementById('totalPrice');
        function handleChange(e) {
            totalPrice.innerHTML = event.target.value * @(Model.Car.PricePerDay)
        }
        
    </script>
}

